{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:3000/api\";\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"authToken\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response.data, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem(\"authToken\");\n    window.location.href = \"/login\";\n  }\n  return Promise.reject(error);\n});\n\n// User endpoints\nexport const loginUser = credentials => api.post(\"/users/login\", credentials);\nexport const registerUser = userData => api.post(\"/users/register\", userData);\nexport const updateUserProfile = (userId, data) => api.put(`/users/${userId}`, data);\nexport const getUserProfile = userId => api.get(`/users/${userId}`);\nexport const getUserVotingHistory = userId => api.get(`/users/${userId}/votes`);\nexport const getUserReputationHistory = userId => api.get(`/users/${userId}/reputation-history`);\n\n// Content endpoints\nexport const getContentList = (page = 1, limit = 10) => api.get(\"/content\", {\n  params: {\n    page,\n    limit\n  }\n});\nexport const getContentById = contentId => api.get(`/content/${contentId}`);\nexport const submitContent = contentData => api.post(\"/content\", contentData);\nexport const updateContent = (contentId, data) => api.put(`/content/${contentId}`, data);\nexport const deleteContent = contentId => api.delete(`/content/${contentId}`);\n\n// Token endpoints\nexport const getSupportedTokens = () => api.get(\"/tokens/supported\");\nexport const getTokenBalance = (address, tokenId) => api.get(`/tokens/${tokenId}/balance/${address}`);\nexport const getTokenDistribution = () => api.get(\"/tokens/distribution\");\n\n// Consensus endpoints\nexport const getConsensusStats = () => api.get(\"/consensus/stats\");\nexport const getVotingTimeline = () => api.get(\"/consensus/timeline\");\nexport const submitVote = (contentId, voteData) => api.post(`/consensus/${contentId}/vote`, voteData);\nexport const getVoteStatus = (contentId, address) => api.get(`/consensus/${contentId}/vote/${address}`);\n\n// IPFS endpoints\nexport const uploadToIPFS = file => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  return api.post(\"/ipfs/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n};\nexport const getFromIPFS = hash => api.get(`/ipfs/${hash}`);\n\n// Blockchain endpoints\nexport const getTransactionStatus = txHash => api.get(`/blockchain/tx/${txHash}`);\nexport const getGasEstimate = txData => api.post(\"/blockchain/estimate-gas\", txData);\n\n// Error handler helper\nexport const handleApiError = error => {\n  var _error$response2, _error$response2$data;\n  const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message || \"An unexpected error occurred. Please try again.\";\n  console.error(\"API Error:\", error);\n  return {\n    error: true,\n    message\n  };\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","_error$response","status","removeItem","window","location","href","loginUser","credentials","post","registerUser","userData","updateUserProfile","userId","put","getUserProfile","get","getUserVotingHistory","getUserReputationHistory","getContentList","page","limit","params","getContentById","contentId","submitContent","contentData","updateContent","deleteContent","delete","getSupportedTokens","getTokenBalance","address","tokenId","getTokenDistribution","getConsensusStats","getVotingTimeline","submitVote","voteData","getVoteStatus","uploadToIPFS","file","formData","FormData","append","getFromIPFS","hash","getTransactionStatus","txHash","getGasEstimate","txData","handleApiError","_error$response2","_error$response2$data","message","console"],"sources":["/home/nishant/proofchain/frontend/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:3000/api\";\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem(\"authToken\");\n      window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n  }\n);\n\n// User endpoints\nexport const loginUser = (credentials) => api.post(\"/users/login\", credentials);\nexport const registerUser = (userData) => api.post(\"/users/register\", userData);\nexport const updateUserProfile = (userId, data) =>\n  api.put(`/users/${userId}`, data);\nexport const getUserProfile = (userId) => api.get(`/users/${userId}`);\nexport const getUserVotingHistory = (userId) =>\n  api.get(`/users/${userId}/votes`);\nexport const getUserReputationHistory = (userId) =>\n  api.get(`/users/${userId}/reputation-history`);\n\n// Content endpoints\nexport const getContentList = (page = 1, limit = 10) =>\n  api.get(\"/content\", { params: { page, limit } });\nexport const getContentById = (contentId) => api.get(`/content/${contentId}`);\nexport const submitContent = (contentData) => api.post(\"/content\", contentData);\nexport const updateContent = (contentId, data) =>\n  api.put(`/content/${contentId}`, data);\nexport const deleteContent = (contentId) => api.delete(`/content/${contentId}`);\n\n// Token endpoints\nexport const getSupportedTokens = () => api.get(\"/tokens/supported\");\nexport const getTokenBalance = (address, tokenId) =>\n  api.get(`/tokens/${tokenId}/balance/${address}`);\nexport const getTokenDistribution = () => api.get(\"/tokens/distribution\");\n\n// Consensus endpoints\nexport const getConsensusStats = () => api.get(\"/consensus/stats\");\nexport const getVotingTimeline = () => api.get(\"/consensus/timeline\");\nexport const submitVote = (contentId, voteData) =>\n  api.post(`/consensus/${contentId}/vote`, voteData);\nexport const getVoteStatus = (contentId, address) =>\n  api.get(`/consensus/${contentId}/vote/${address}`);\n\n// IPFS endpoints\nexport const uploadToIPFS = (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  return api.post(\"/ipfs/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  });\n};\nexport const getFromIPFS = (hash) => api.get(`/ipfs/${hash}`);\n\n// Blockchain endpoints\nexport const getTransactionStatus = (txHash) =>\n  api.get(`/blockchain/tx/${txHash}`);\nexport const getGasEstimate = (txData) =>\n  api.post(\"/blockchain/estimate-gas\", txData);\n\n// Error handler helper\nexport const handleApiError = (error) => {\n  const message =\n    error.response?.data?.message ||\n    error.message ||\n    \"An unexpected error occurred. Please try again.\";\n  console.error(\"API Error:\", error);\n  return { error: true, message };\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}