{"ast":null,"code":"import axios from\"axios\";const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||\"http://localhost:3000/api\";// Create axios instance with default config\nconst api=axios.create({baseURL:API_BASE_URL,headers:{\"Content-Type\":\"application/json\"}});// Add request interceptor to include auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem(\"authToken\");if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Add response interceptor for error handling\napi.interceptors.response.use(response=>response.data,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem(\"authToken\");window.location.href=\"/login\";}return Promise.reject(error);});// User endpoints\nexport const loginUser=credentials=>api.post(\"/users/login\",credentials);export const registerUser=userData=>api.post(\"/users/register\",userData);export const updateUserProfile=(userId,data)=>api.put(\"/users/\".concat(userId),data);export const getUserProfile=userId=>api.get(\"/users/\".concat(userId));export const getUserVotingHistory=userId=>api.get(\"/users/\".concat(userId,\"/votes\"));export const getUserReputationHistory=userId=>api.get(\"/users/\".concat(userId,\"/reputation-history\"));// Content endpoints\nexport const getContentList=function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;return api.get(\"/content\",{params:{page,limit}});};export const getContentById=contentId=>api.get(\"/content/\".concat(contentId));export const submitContent=contentData=>api.post(\"/content\",contentData);export const updateContent=(contentId,data)=>api.put(\"/content/\".concat(contentId),data);export const deleteContent=contentId=>api.delete(\"/content/\".concat(contentId));// Token endpoints\nexport const getSupportedTokens=()=>api.get(\"/tokens/supported\");export const getTokenBalance=(address,tokenId)=>api.get(\"/tokens/\".concat(tokenId,\"/balance/\").concat(address));export const getTokenDistribution=()=>api.get(\"/tokens/distribution\");// Consensus endpoints\nexport const getConsensusStats=()=>api.get(\"/consensus/stats\");export const getVotingTimeline=()=>api.get(\"/consensus/timeline\");export const submitVote=(contentId,voteData)=>api.post(\"/consensus/\".concat(contentId,\"/vote\"),voteData);export const getVoteStatus=(contentId,address)=>api.get(\"/consensus/\".concat(contentId,\"/vote/\").concat(address));// IPFS endpoints\nexport const uploadToIPFS=file=>{const formData=new FormData();formData.append(\"file\",file);return api.post(\"/ipfs/upload\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});};export const getFromIPFS=hash=>api.get(\"/ipfs/\".concat(hash));// Blockchain endpoints\nexport const getTransactionStatus=txHash=>api.get(\"/blockchain/tx/\".concat(txHash));export const getGasEstimate=txData=>api.post(\"/blockchain/estimate-gas\",txData);// Error handler helper\nexport const handleApiError=error=>{var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message||\"An unexpected error occurred. Please try again.\";console.error(\"API Error:\",error);return{error:true,message};};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","data","_error$response","status","removeItem","window","location","href","loginUser","credentials","post","registerUser","userData","updateUserProfile","userId","put","getUserProfile","get","getUserVotingHistory","getUserReputationHistory","getContentList","page","arguments","length","undefined","limit","params","getContentById","contentId","submitContent","contentData","updateContent","deleteContent","delete","getSupportedTokens","getTokenBalance","address","tokenId","getTokenDistribution","getConsensusStats","getVotingTimeline","submitVote","voteData","getVoteStatus","uploadToIPFS","file","formData","FormData","append","getFromIPFS","hash","getTransactionStatus","txHash","getGasEstimate","txData","handleApiError","_error$response2","_error$response2$data","message","console"],"sources":["/home/nishant/proofchain/frontend/src/utils/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:3000/api\";\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem(\"authToken\");\n      window.location.href = \"/login\";\n    }\n    return Promise.reject(error);\n  }\n);\n\n// User endpoints\nexport const loginUser = (credentials) => api.post(\"/users/login\", credentials);\nexport const registerUser = (userData) => api.post(\"/users/register\", userData);\nexport const updateUserProfile = (userId, data) =>\n  api.put(`/users/${userId}`, data);\nexport const getUserProfile = (userId) => api.get(`/users/${userId}`);\nexport const getUserVotingHistory = (userId) =>\n  api.get(`/users/${userId}/votes`);\nexport const getUserReputationHistory = (userId) =>\n  api.get(`/users/${userId}/reputation-history`);\n\n// Content endpoints\nexport const getContentList = (page = 1, limit = 10) =>\n  api.get(\"/content\", { params: { page, limit } });\nexport const getContentById = (contentId) => api.get(`/content/${contentId}`);\nexport const submitContent = (contentData) => api.post(\"/content\", contentData);\nexport const updateContent = (contentId, data) =>\n  api.put(`/content/${contentId}`, data);\nexport const deleteContent = (contentId) => api.delete(`/content/${contentId}`);\n\n// Token endpoints\nexport const getSupportedTokens = () => api.get(\"/tokens/supported\");\nexport const getTokenBalance = (address, tokenId) =>\n  api.get(`/tokens/${tokenId}/balance/${address}`);\nexport const getTokenDistribution = () => api.get(\"/tokens/distribution\");\n\n// Consensus endpoints\nexport const getConsensusStats = () => api.get(\"/consensus/stats\");\nexport const getVotingTimeline = () => api.get(\"/consensus/timeline\");\nexport const submitVote = (contentId, voteData) =>\n  api.post(`/consensus/${contentId}/vote`, voteData);\nexport const getVoteStatus = (contentId, address) =>\n  api.get(`/consensus/${contentId}/vote/${address}`);\n\n// IPFS endpoints\nexport const uploadToIPFS = (file) => {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  return api.post(\"/ipfs/upload\", formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  });\n};\nexport const getFromIPFS = (hash) => api.get(`/ipfs/${hash}`);\n\n// Blockchain endpoints\nexport const getTransactionStatus = (txHash) =>\n  api.get(`/blockchain/tx/${txHash}`);\nexport const getGasEstimate = (txData) =>\n  api.post(\"/blockchain/estimate-gas\", txData);\n\n// Error handler helper\nexport const handleApiError = (error) => {\n  const message =\n    error.response?.data?.message ||\n    error.message ||\n    \"An unexpected error occurred. Please try again.\";\n  console.error(\"API Error:\", error);\n  return { error: true, message };\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}