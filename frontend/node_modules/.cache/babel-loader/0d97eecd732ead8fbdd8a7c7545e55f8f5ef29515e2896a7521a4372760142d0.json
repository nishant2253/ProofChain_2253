{"ast":null,"code":"import _objectSpread from\"/home/nishant/Downloads/proofchain/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from\"react\";import{motion}from\"framer-motion\";import useWallet from\"../../hooks/useWallet\";import{getSupportedTokens,submitVote,getVoteStatus}from\"../../utils/api\";import{generateCommitHash,generateRandomSalt}from\"../../utils/blockchain\";import{parseErrorMessage,formatDate,getVotingPhase}from\"../../utils/helpers\";import{ethers}from\"ethers\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const VotingInterface=_ref=>{let{content,onVoteComplete}=_ref;const{isConnected,signer,address}=useWallet();const[votingPhase,setVotingPhase]=useState(\"\");const[supportedTokens,setSupportedTokens]=useState([]);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const[savedCommit,setSavedCommit]=useState(null);const[vote,setVote]=useState(null);const[confidence,setConfidence]=useState(5);const[isSubmitting,setIsSubmitting]=useState(false);const[existingVote,setExistingVote]=useState(null);// Commit phase state\nconst[commitForm,setCommitForm]=useState({vote:\"\",confidence:5,// Default confidence (1-10)\ntokenType:\"0\",// Default token type (ETH)\nstakeAmount:\"0.01\"// Default stake amount\n});// Reveal phase state\nconst[revealForm,setRevealForm]=useState({vote:\"\",confidence:5,salt:\"\"});// Load supported tokens on mount\nuseEffect(()=>{const fetchTokens=async()=>{try{const response=await getSupportedTokens();setSupportedTokens(response);}catch(err){console.error(\"Error fetching supported tokens:\",err);setError(\"Failed to load supported tokens\");}};fetchTokens();},[]);// Fetch saved commit data for the current user\nconst fetchSavedCommit=useCallback(async()=>{try{// Use getVoteStatus instead since getSavedCommitData is not available\nconst response=await getVoteStatus(content._id,address);setSavedCommit(response);// Pre-fill reveal form with saved data if commit data exists\nif(response&&response.commitHash){setRevealForm({vote:response.vote?\"true\":\"false\",confidence:response.confidence||5,salt:response.salt||\"\"});}}catch(err){console.log(\"No saved commit found or error fetching commit data\");// Not setting error state here as it's normal for a user to not have a saved commit\n}},[content._id,address]);// Determine voting phase when content changes\nuseEffect(()=>{if(content){const phase=getVotingPhase(content);setVotingPhase(phase);// If in reveal phase, try to load saved commit data\nif(phase===\"reveal\"&&isConnected){fetchSavedCommit();}}},[content,isConnected,fetchSavedCommit]);// Check if user has already voted\nuseEffect(()=>{const checkExistingVote=async()=>{if(!isConnected||!address||!content._id)return;try{const voteStatus=await getVoteStatus(content._id,address);if((voteStatus===null||voteStatus===void 0?void 0:voteStatus.vote)!==undefined){setExistingVote(voteStatus);setVote(voteStatus.vote);setConfidence(voteStatus.confidence);}}catch(err){console.error(\"Error checking vote status:\",err);}};checkExistingVote();},[isConnected,address,content._id]);// Handle commit form changes\nconst handleCommitChange=e=>{const{name,value}=e.target;setCommitForm(_objectSpread(_objectSpread({},commitForm),{},{[name]:value}));};// Handle reveal form changes\nconst handleRevealChange=e=>{const{name,value}=e.target;setRevealForm(_objectSpread(_objectSpread({},revealForm),{},{[name]:value}));};// Submit commit vote\nconst handleCommitSubmit=async e=>{e.preventDefault();if(!isConnected){setError(\"Please connect your wallet first\");return;}setIsLoading(true);setError(null);setSuccess(null);try{// Generate a random salt\nconst salt=generateRandomSalt();// Generate commit hash\nconst vote=commitForm.vote===\"true\";const confidence=parseInt(commitForm.confidence);const commitHash=generateCommitHash(vote,confidence,salt);// Prepare data for API\nconst commitData={vote,confidence,salt,commitHash,tokenType:parseInt(commitForm.tokenType),stakeAmount:commitForm.stakeAmount};// Submit commit vote\nawait submitVote(content._id,_objectSpread(_objectSpread({},commitData),{},{type:\"commit\"}));setSuccess(\"Vote committed successfully! Save your salt for the reveal phase.\");// Notify parent component\nif(onVoteComplete){onVoteComplete(\"commit\");}}catch(err){console.error(\"Error committing vote:\",err);setError(parseErrorMessage(err));}finally{setIsLoading(false);}};// Submit reveal vote\nconst handleRevealSubmit=async e=>{e.preventDefault();if(!isConnected){setError(\"Please connect your wallet first\");return;}setIsLoading(true);setError(null);setSuccess(null);try{// Prepare data for API\nconst revealData={vote:revealForm.vote===\"true\",confidence:parseInt(revealForm.confidence),salt:revealForm.salt};// Submit reveal vote\nawait submitVote(content._id,_objectSpread(_objectSpread({},revealData),{},{type:\"reveal\"}));setSuccess(\"Vote revealed successfully!\");// Notify parent component\nif(onVoteComplete){onVoteComplete(\"reveal\");}}catch(err){console.error(\"Error revealing vote:\",err);setError(parseErrorMessage(err));}finally{setIsLoading(false);}};// Handle finalization\nconst handleFinalize=async()=>{if(!isConnected){setError(\"Please connect your wallet first\");return;}setIsLoading(true);setError(null);setSuccess(null);try{await submitVote(content._id,{type:\"finalize\"});setSuccess(\"Voting finalized successfully!\");// Notify parent component\nif(onVoteComplete){onVoteComplete(\"finalize\");}}catch(err){console.error(\"Error finalizing voting:\",err);setError(parseErrorMessage(err));}finally{setIsLoading(false);}};const handleVoteSubmit=async()=>{if(!isConnected){setError(\"Please connect your wallet to vote\");return;}if(vote===null){setError(\"Please select your vote\");return;}try{setIsSubmitting(true);setError(null);// Create vote message\nconst message={contentId:content._id,vote,confidence,timestamp:Date.now(),address};// Sign the message\nconst messageHash=ethers.utils.hashMessage(JSON.stringify(message));const signature=await signer.signMessage(messageHash);// Submit vote to backend\nawait submitVote(content._id,_objectSpread(_objectSpread({},message),{},{signature}));setSuccess(\"Vote submitted successfully!\");onVoteComplete===null||onVoteComplete===void 0?void 0:onVoteComplete();// Clear success message after 3 seconds\nsetTimeout(()=>{setSuccess(null);},3000);}catch(err){console.error(\"Vote submission error:\",err);setError(err.message||\"Failed to submit vote. Please try again.\");}finally{setIsSubmitting(false);}};// Render appropriate interface based on voting phase\nconst renderVotingInterface=()=>{if(!isConnected){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-8\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"Connect your wallet to participate in voting\"})});}switch(votingPhase){case\"commit\":return renderCommitPhase();case\"reveal\":return renderRevealPhase();case\"pending\":return renderPendingPhase();case\"finalized\":return renderFinalizedPhase();default:return/*#__PURE__*/_jsx(\"div\",{children:\"Loading voting interface...\"});}};// Render commit phase interface\nconst renderCommitPhase=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Commit Your Vote\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"In this phase, you commit to a vote without revealing your choice. Your vote will be securely hashed and stored on the blockchain.\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleCommitSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Your Vote\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"vote\",value:\"true\",checked:commitForm.vote===\"true\",onChange:handleCommitChange,className:\"h-4 w-4 text-primary-600 focus:ring-primary-500\",required:true}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2\",children:\"Approve\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"vote\",value:\"false\",checked:commitForm.vote===\"false\",onChange:handleCommitChange,className:\"h-4 w-4 text-primary-600 focus:ring-primary-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2\",children:\"Reject\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Confidence Level (1-10)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",name:\"confidence\",min:\"1\",max:\"10\",value:commitForm.confidence,onChange:handleCommitChange,className:\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs text-gray-500\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Low\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Medium\"}),/*#__PURE__*/_jsx(\"span\",{children:\"High\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-1\",children:/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:commitForm.confidence})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Token Type\"}),/*#__PURE__*/_jsx(\"select\",{name:\"tokenType\",value:commitForm.tokenType,onChange:handleCommitChange,className:\"input-field\",required:true,children:supportedTokens.map(token=>/*#__PURE__*/_jsxs(\"option\",{value:token.tokenType,children:[token.symbol,\" - \",token.name]},token.tokenType))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Stake Amount\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"stakeAmount\",value:commitForm.stakeAmount,onChange:handleCommitChange,step:\"0.001\",min:\"0.001\",className:\"input-field\",required:true}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"Higher stakes increase your voting power (quadratically)\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pt-4\",children:/*#__PURE__*/_jsx(motion.button,{type:\"submit\",whileHover:{scale:1.05},whileTap:{scale:0.95},disabled:isLoading,className:\"btn-primary w-full\",children:isLoading?\"Submitting...\":\"Commit Vote\"})})]})]});};// Render reveal phase interface\nconst renderRevealPhase=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Reveal Your Vote\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"In this phase, you reveal your vote by providing the same vote, confidence level, and salt that you used during the commit phase.\"}),savedCommit?/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-50 border border-green-200 rounded-md p-4 mb-6\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-green-800\",children:\"We found your previously committed vote. The form has been pre-filled with your data.\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"bg-yellow-50 border border-yellow-200 rounded-md p-4 mb-6\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-800\",children:\"No saved commit found. Make sure you use the exact same values you used during the commit phase.\"})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleRevealSubmit,className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Your Vote\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"vote\",value:\"true\",checked:revealForm.vote===\"true\",onChange:handleRevealChange,className:\"h-4 w-4 text-primary-600 focus:ring-primary-500\",required:true}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2\",children:\"Approve\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"vote\",value:\"false\",checked:revealForm.vote===\"false\",onChange:handleRevealChange,className:\"h-4 w-4 text-primary-600 focus:ring-primary-500\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2\",children:\"Reject\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Confidence Level (1-10)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",name:\"confidence\",min:\"1\",max:\"10\",value:revealForm.confidence,onChange:handleRevealChange,className:\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-1\",children:/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:revealForm.confidence})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Salt\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"salt\",value:revealForm.salt,onChange:handleRevealChange,className:\"input-field\",required:true}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-500 mt-1\",children:\"This must match the salt used in the commit phase\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pt-4\",children:/*#__PURE__*/_jsx(motion.button,{type:\"submit\",whileHover:{scale:1.05},whileTap:{scale:0.95},disabled:isLoading,className:\"btn-primary w-full\",children:isLoading?\"Submitting...\":\"Reveal Vote\"})})]})]});};// Render pending finalization phase\nconst renderPendingPhase=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Voting Period Ended\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-6\",children:\"The voting period has ended. The results can now be finalized on the blockchain.\"}),/*#__PURE__*/_jsx(motion.button,{whileHover:{scale:1.05},whileTap:{scale:0.95},onClick:handleFinalize,disabled:isLoading,className:\"btn-primary w-full\",children:isLoading?\"Processing...\":\"Finalize Voting\"})]});};// Render finalized phase\nconst renderFinalizedPhase=()=>{const result=content.blockchainResults||{};const winningOption=result.winningOption===1?\"Approved\":\"Rejected\";return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Voting Finalized\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600 mb-2\",children:[\"This content has been \",winningOption.toLowerCase(),\" by the community.\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700\",children:\"Result:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:winningOption})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700\",children:\"Total Participants:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:result.totalParticipants||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700\",children:\"Total USD Value Staked:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[\"$\",result.totalUSDValue||0]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700\",children:\"Finalized On:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:formatDate(content.finalizedAt)})]})]})]});};return/*#__PURE__*/_jsxs(\"div\",{children:[error&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:-10},animate:{opacity:1,y:0},className:\"bg-red-100 text-red-700 p-4 rounded-md mb-6\",children:error}),success&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:-10},animate:{opacity:1,y:0},className:\"bg-green-100 text-green-700 p-4 rounded-md mb-6\",children:success}),existingVote&&!existingVote.canModify&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\",children:\"Your Vote\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 rounded-lg bg-white dark:bg-gray-700\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-medium text-gray-900 dark:text-white\",children:existingVote.vote?\"Approved\":\"Rejected\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:[\"Confidence: \",existingVote.confidence,\"/10\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400 mt-2\",children:[\"Submitted: \",new Date(existingVote.timestamp).toLocaleString()]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400 text-center\",children:\"Your vote has been recorded and cannot be modified\"})]})]}),renderVotingInterface(),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleVoteSubmit,disabled:isSubmitting||vote===null,className:\"\\n            w-full py-3 px-4 rounded-lg font-medium text-white\\n            \".concat(isSubmitting?\"bg-gray-400 cursor-not-allowed\":\"bg-primary-600 hover:bg-primary-700\",\"\\n            transition-colors duration-200\\n          \"),children:isSubmitting?/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"}),\"Submitting...\"]}):existingVote?\"Update Vote\":\"Submit Vote\"})})]});};export default VotingInterface;","map":{"version":3,"names":["React","useState","useEffect","useCallback","motion","useWallet","getSupportedTokens","submitVote","getVoteStatus","generateCommitHash","generateRandomSalt","parseErrorMessage","formatDate","getVotingPhase","ethers","jsx","_jsx","jsxs","_jsxs","VotingInterface","_ref","content","onVoteComplete","isConnected","signer","address","votingPhase","setVotingPhase","supportedTokens","setSupportedTokens","isLoading","setIsLoading","error","setError","success","setSuccess","savedCommit","setSavedCommit","vote","setVote","confidence","setConfidence","isSubmitting","setIsSubmitting","existingVote","setExistingVote","commitForm","setCommitForm","tokenType","stakeAmount","revealForm","setRevealForm","salt","fetchTokens","response","err","console","fetchSavedCommit","_id","commitHash","log","phase","checkExistingVote","voteStatus","undefined","handleCommitChange","e","name","value","target","_objectSpread","handleRevealChange","handleCommitSubmit","preventDefault","parseInt","commitData","type","handleRevealSubmit","revealData","handleFinalize","handleVoteSubmit","message","contentId","timestamp","Date","now","messageHash","utils","hashMessage","JSON","stringify","signature","signMessage","setTimeout","renderVotingInterface","className","children","renderCommitPhase","renderRevealPhase","renderPendingPhase","renderFinalizedPhase","onSubmit","checked","onChange","required","min","max","map","token","symbol","step","button","whileHover","scale","whileTap","disabled","onClick","result","blockchainResults","winningOption","toLowerCase","totalParticipants","totalUSDValue","finalizedAt","div","initial","opacity","y","animate","canModify","toLocaleString","concat"],"sources":["/home/nishant/Downloads/proofchain/frontend/src/components/VotingInterface/index.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\nimport useWallet from \"../../hooks/useWallet\";\nimport { getSupportedTokens, submitVote, getVoteStatus } from \"../../utils/api\";\nimport { generateCommitHash, generateRandomSalt } from \"../../utils/blockchain\";\nimport {\n  parseErrorMessage,\n  formatDate,\n  getVotingPhase,\n} from \"../../utils/helpers\";\nimport { ethers } from \"ethers\";\n\nconst VotingInterface = ({ content, onVoteComplete }) => {\n  const { isConnected, signer, address } = useWallet();\n\n  const [votingPhase, setVotingPhase] = useState(\"\");\n  const [supportedTokens, setSupportedTokens] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [savedCommit, setSavedCommit] = useState(null);\n  const [vote, setVote] = useState(null);\n  const [confidence, setConfidence] = useState(5);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [existingVote, setExistingVote] = useState(null);\n\n  // Commit phase state\n  const [commitForm, setCommitForm] = useState({\n    vote: \"\",\n    confidence: 5, // Default confidence (1-10)\n    tokenType: \"0\", // Default token type (ETH)\n    stakeAmount: \"0.01\", // Default stake amount\n  });\n\n  // Reveal phase state\n  const [revealForm, setRevealForm] = useState({\n    vote: \"\",\n    confidence: 5,\n    salt: \"\",\n  });\n\n  // Load supported tokens on mount\n  useEffect(() => {\n    const fetchTokens = async () => {\n      try {\n        const response = await getSupportedTokens();\n        setSupportedTokens(response);\n      } catch (err) {\n        console.error(\"Error fetching supported tokens:\", err);\n        setError(\"Failed to load supported tokens\");\n      }\n    };\n\n    fetchTokens();\n  }, []);\n\n  // Fetch saved commit data for the current user\n  const fetchSavedCommit = useCallback(async () => {\n    try {\n      // Use getVoteStatus instead since getSavedCommitData is not available\n      const response = await getVoteStatus(content._id, address);\n      setSavedCommit(response);\n\n      // Pre-fill reveal form with saved data if commit data exists\n      if (response && response.commitHash) {\n        setRevealForm({\n          vote: response.vote ? \"true\" : \"false\",\n          confidence: response.confidence || 5,\n          salt: response.salt || \"\",\n        });\n      }\n    } catch (err) {\n      console.log(\"No saved commit found or error fetching commit data\");\n      // Not setting error state here as it's normal for a user to not have a saved commit\n    }\n  }, [content._id, address]);\n\n  // Determine voting phase when content changes\n  useEffect(() => {\n    if (content) {\n      const phase = getVotingPhase(content);\n      setVotingPhase(phase);\n\n      // If in reveal phase, try to load saved commit data\n      if (phase === \"reveal\" && isConnected) {\n        fetchSavedCommit();\n      }\n    }\n  }, [content, isConnected, fetchSavedCommit]);\n\n  // Check if user has already voted\n  useEffect(() => {\n    const checkExistingVote = async () => {\n      if (!isConnected || !address || !content._id) return;\n\n      try {\n        const voteStatus = await getVoteStatus(content._id, address);\n        if (voteStatus?.vote !== undefined) {\n          setExistingVote(voteStatus);\n          setVote(voteStatus.vote);\n          setConfidence(voteStatus.confidence);\n        }\n      } catch (err) {\n        console.error(\"Error checking vote status:\", err);\n      }\n    };\n\n    checkExistingVote();\n  }, [isConnected, address, content._id]);\n\n  // Handle commit form changes\n  const handleCommitChange = (e) => {\n    const { name, value } = e.target;\n    setCommitForm({\n      ...commitForm,\n      [name]: value,\n    });\n  };\n\n  // Handle reveal form changes\n  const handleRevealChange = (e) => {\n    const { name, value } = e.target;\n    setRevealForm({\n      ...revealForm,\n      [name]: value,\n    });\n  };\n\n  // Submit commit vote\n  const handleCommitSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!isConnected) {\n      setError(\"Please connect your wallet first\");\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      // Generate a random salt\n      const salt = generateRandomSalt();\n\n      // Generate commit hash\n      const vote = commitForm.vote === \"true\";\n      const confidence = parseInt(commitForm.confidence);\n      const commitHash = generateCommitHash(vote, confidence, salt);\n\n      // Prepare data for API\n      const commitData = {\n        vote,\n        confidence,\n        salt,\n        commitHash,\n        tokenType: parseInt(commitForm.tokenType),\n        stakeAmount: commitForm.stakeAmount,\n      };\n\n      // Submit commit vote\n      await submitVote(content._id, { ...commitData, type: \"commit\" });\n\n      setSuccess(\n        \"Vote committed successfully! Save your salt for the reveal phase.\"\n      );\n\n      // Notify parent component\n      if (onVoteComplete) {\n        onVoteComplete(\"commit\");\n      }\n    } catch (err) {\n      console.error(\"Error committing vote:\", err);\n      setError(parseErrorMessage(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Submit reveal vote\n  const handleRevealSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!isConnected) {\n      setError(\"Please connect your wallet first\");\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      // Prepare data for API\n      const revealData = {\n        vote: revealForm.vote === \"true\",\n        confidence: parseInt(revealForm.confidence),\n        salt: revealForm.salt,\n      };\n\n      // Submit reveal vote\n      await submitVote(content._id, { ...revealData, type: \"reveal\" });\n\n      setSuccess(\"Vote revealed successfully!\");\n\n      // Notify parent component\n      if (onVoteComplete) {\n        onVoteComplete(\"reveal\");\n      }\n    } catch (err) {\n      console.error(\"Error revealing vote:\", err);\n      setError(parseErrorMessage(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle finalization\n  const handleFinalize = async () => {\n    if (!isConnected) {\n      setError(\"Please connect your wallet first\");\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      await submitVote(content._id, { type: \"finalize\" });\n\n      setSuccess(\"Voting finalized successfully!\");\n\n      // Notify parent component\n      if (onVoteComplete) {\n        onVoteComplete(\"finalize\");\n      }\n    } catch (err) {\n      console.error(\"Error finalizing voting:\", err);\n      setError(parseErrorMessage(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleVoteSubmit = async () => {\n    if (!isConnected) {\n      setError(\"Please connect your wallet to vote\");\n      return;\n    }\n\n    if (vote === null) {\n      setError(\"Please select your vote\");\n      return;\n    }\n\n    try {\n      setIsSubmitting(true);\n      setError(null);\n\n      // Create vote message\n      const message = {\n        contentId: content._id,\n        vote,\n        confidence,\n        timestamp: Date.now(),\n        address,\n      };\n\n      // Sign the message\n      const messageHash = ethers.utils.hashMessage(JSON.stringify(message));\n      const signature = await signer.signMessage(messageHash);\n\n      // Submit vote to backend\n      await submitVote(content._id, {\n        ...message,\n        signature,\n      });\n\n      setSuccess(\"Vote submitted successfully!\");\n      onVoteComplete?.();\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        setSuccess(null);\n      }, 3000);\n    } catch (err) {\n      console.error(\"Vote submission error:\", err);\n      setError(err.message || \"Failed to submit vote. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Render appropriate interface based on voting phase\n  const renderVotingInterface = () => {\n    if (!isConnected) {\n      return (\n        <div className=\"text-center py-8\">\n          <p className=\"text-gray-600 mb-4\">\n            Connect your wallet to participate in voting\n          </p>\n        </div>\n      );\n    }\n\n    switch (votingPhase) {\n      case \"commit\":\n        return renderCommitPhase();\n      case \"reveal\":\n        return renderRevealPhase();\n      case \"pending\":\n        return renderPendingPhase();\n      case \"finalized\":\n        return renderFinalizedPhase();\n      default:\n        return <div>Loading voting interface...</div>;\n    }\n  };\n\n  // Render commit phase interface\n  const renderCommitPhase = () => {\n    return (\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h2 className=\"text-xl font-semibold mb-4\">Commit Your Vote</h2>\n        <p className=\"text-gray-600 mb-6\">\n          In this phase, you commit to a vote without revealing your choice.\n          Your vote will be securely hashed and stored on the blockchain.\n        </p>\n\n        <form onSubmit={handleCommitSubmit} className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Your Vote\n            </label>\n            <div className=\"flex space-x-4\">\n              <label className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  name=\"vote\"\n                  value=\"true\"\n                  checked={commitForm.vote === \"true\"}\n                  onChange={handleCommitChange}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500\"\n                  required\n                />\n                <span className=\"ml-2\">Approve</span>\n              </label>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  name=\"vote\"\n                  value=\"false\"\n                  checked={commitForm.vote === \"false\"}\n                  onChange={handleCommitChange}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500\"\n                />\n                <span className=\"ml-2\">Reject</span>\n              </label>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Confidence Level (1-10)\n            </label>\n            <input\n              type=\"range\"\n              name=\"confidence\"\n              min=\"1\"\n              max=\"10\"\n              value={commitForm.confidence}\n              onChange={handleCommitChange}\n              className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n            />\n            <div className=\"flex justify-between text-xs text-gray-500\">\n              <span>Low</span>\n              <span>Medium</span>\n              <span>High</span>\n            </div>\n            <div className=\"text-center mt-1\">\n              <span className=\"font-medium\">{commitForm.confidence}</span>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Token Type\n            </label>\n            <select\n              name=\"tokenType\"\n              value={commitForm.tokenType}\n              onChange={handleCommitChange}\n              className=\"input-field\"\n              required\n            >\n              {supportedTokens.map((token) => (\n                <option key={token.tokenType} value={token.tokenType}>\n                  {token.symbol} - {token.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Stake Amount\n            </label>\n            <input\n              type=\"number\"\n              name=\"stakeAmount\"\n              value={commitForm.stakeAmount}\n              onChange={handleCommitChange}\n              step=\"0.001\"\n              min=\"0.001\"\n              className=\"input-field\"\n              required\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">\n              Higher stakes increase your voting power (quadratically)\n            </p>\n          </div>\n\n          <div className=\"pt-4\">\n            <motion.button\n              type=\"submit\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              disabled={isLoading}\n              className=\"btn-primary w-full\"\n            >\n              {isLoading ? \"Submitting...\" : \"Commit Vote\"}\n            </motion.button>\n          </div>\n        </form>\n      </div>\n    );\n  };\n\n  // Render reveal phase interface\n  const renderRevealPhase = () => {\n    return (\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h2 className=\"text-xl font-semibold mb-4\">Reveal Your Vote</h2>\n        <p className=\"text-gray-600 mb-6\">\n          In this phase, you reveal your vote by providing the same vote,\n          confidence level, and salt that you used during the commit phase.\n        </p>\n\n        {savedCommit ? (\n          <div className=\"bg-green-50 border border-green-200 rounded-md p-4 mb-6\">\n            <p className=\"text-green-800\">\n              We found your previously committed vote. The form has been\n              pre-filled with your data.\n            </p>\n          </div>\n        ) : (\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4 mb-6\">\n            <p className=\"text-yellow-800\">\n              No saved commit found. Make sure you use the exact same values you\n              used during the commit phase.\n            </p>\n          </div>\n        )}\n\n        <form onSubmit={handleRevealSubmit} className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Your Vote\n            </label>\n            <div className=\"flex space-x-4\">\n              <label className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  name=\"vote\"\n                  value=\"true\"\n                  checked={revealForm.vote === \"true\"}\n                  onChange={handleRevealChange}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500\"\n                  required\n                />\n                <span className=\"ml-2\">Approve</span>\n              </label>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  name=\"vote\"\n                  value=\"false\"\n                  checked={revealForm.vote === \"false\"}\n                  onChange={handleRevealChange}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500\"\n                />\n                <span className=\"ml-2\">Reject</span>\n              </label>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Confidence Level (1-10)\n            </label>\n            <input\n              type=\"range\"\n              name=\"confidence\"\n              min=\"1\"\n              max=\"10\"\n              value={revealForm.confidence}\n              onChange={handleRevealChange}\n              className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n            />\n            <div className=\"text-center mt-1\">\n              <span className=\"font-medium\">{revealForm.confidence}</span>\n            </div>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Salt\n            </label>\n            <input\n              type=\"text\"\n              name=\"salt\"\n              value={revealForm.salt}\n              onChange={handleRevealChange}\n              className=\"input-field\"\n              required\n            />\n            <p className=\"text-xs text-gray-500 mt-1\">\n              This must match the salt used in the commit phase\n            </p>\n          </div>\n\n          <div className=\"pt-4\">\n            <motion.button\n              type=\"submit\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              disabled={isLoading}\n              className=\"btn-primary w-full\"\n            >\n              {isLoading ? \"Submitting...\" : \"Reveal Vote\"}\n            </motion.button>\n          </div>\n        </form>\n      </div>\n    );\n  };\n\n  // Render pending finalization phase\n  const renderPendingPhase = () => {\n    return (\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h2 className=\"text-xl font-semibold mb-4\">Voting Period Ended</h2>\n        <p className=\"text-gray-600 mb-6\">\n          The voting period has ended. The results can now be finalized on the\n          blockchain.\n        </p>\n\n        <motion.button\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n          onClick={handleFinalize}\n          disabled={isLoading}\n          className=\"btn-primary w-full\"\n        >\n          {isLoading ? \"Processing...\" : \"Finalize Voting\"}\n        </motion.button>\n      </div>\n    );\n  };\n\n  // Render finalized phase\n  const renderFinalizedPhase = () => {\n    const result = content.blockchainResults || {};\n    const winningOption = result.winningOption === 1 ? \"Approved\" : \"Rejected\";\n\n    return (\n      <div className=\"bg-white p-6 rounded-lg shadow-md\">\n        <h2 className=\"text-xl font-semibold mb-4\">Voting Finalized</h2>\n        <p className=\"text-gray-600 mb-2\">\n          This content has been {winningOption.toLowerCase()} by the community.\n        </p>\n\n        <div className=\"mt-6 space-y-4\">\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-700\">Result:</span>\n            <span className=\"font-medium\">{winningOption}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-700\">Total Participants:</span>\n            <span className=\"font-medium\">{result.totalParticipants || 0}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-700\">Total USD Value Staked:</span>\n            <span className=\"font-medium\">${result.totalUSDValue || 0}</span>\n          </div>\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-700\">Finalized On:</span>\n            <span className=\"font-medium\">\n              {formatDate(content.finalizedAt)}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {error && (\n        <motion.div\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-red-100 text-red-700 p-4 rounded-md mb-6\"\n        >\n          {error}\n        </motion.div>\n      )}\n\n      {success && (\n        <motion.div\n          initial={{ opacity: 0, y: -10 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-green-100 text-green-700 p-4 rounded-md mb-6\"\n        >\n          {success}\n        </motion.div>\n      )}\n\n      {existingVote && !existingVote.canModify && (\n        <div className=\"bg-gray-50 dark:bg-gray-800 p-6 rounded-lg\">\n          <h3 className=\"text-xl font-semibold mb-4 text-gray-900 dark:text-white\">\n            Your Vote\n          </h3>\n          <div className=\"space-y-4\">\n            <div className=\"p-4 rounded-lg bg-white dark:bg-gray-700\">\n              <p className=\"font-medium text-gray-900 dark:text-white\">\n                {existingVote.vote ? \"Approved\" : \"Rejected\"}\n              </p>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                Confidence: {existingVote.confidence}/10\n              </p>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n                Submitted: {new Date(existingVote.timestamp).toLocaleString()}\n              </p>\n            </div>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 text-center\">\n              Your vote has been recorded and cannot be modified\n            </p>\n          </div>\n        </div>\n      )}\n\n      {renderVotingInterface()}\n\n      <div className=\"mt-6\">\n        <button\n          onClick={handleVoteSubmit}\n          disabled={isSubmitting || vote === null}\n          className={`\n            w-full py-3 px-4 rounded-lg font-medium text-white\n            ${\n              isSubmitting\n                ? \"bg-gray-400 cursor-not-allowed\"\n                : \"bg-primary-600 hover:bg-primary-700\"\n            }\n            transition-colors duration-200\n          `}\n        >\n          {isSubmitting ? (\n            <div className=\"flex items-center justify-center\">\n              <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n              Submitting...\n            </div>\n          ) : existingVote ? (\n            \"Update Vote\"\n          ) : (\n            \"Submit Vote\"\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default VotingInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}